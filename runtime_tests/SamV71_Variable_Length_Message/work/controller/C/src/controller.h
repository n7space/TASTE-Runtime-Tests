
/* Header file for function Controller in C language
 * Generated by TASTE on 2021-12-07 19:44:23
 * Context Parameters present : NO
 * Provided interfaces : pong, result, trigger
 * Required interfaces : ping, task_a_acn, task_a_native, task_a_uper, task_b_acn, task_b_native, task_b_uper
 * User-defined properties for this function:
  *  |_ TASTE::Is_Component_Type = false
 * DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
 */

#pragma once

#include "dataview-uniq.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __unix__
   #include <stdlib.h>
   #include <stdio.h>
#endif

void controller_startup(void);

/* Provided interfaces */
void controller_PI_pong( void );
void controller_PI_result( const asn1SccLargeUint32 * );
void controller_PI_trigger( void );

/* Required interfaces */
extern void controller_RI_ping( void );
extern void controller_RI_task_a_acn( const asn1SccBigParameter * );
extern void controller_RI_task_a_native( const asn1SccBigParameter * );
extern void controller_RI_task_a_uper( const asn1SccBigParameter * );
extern void controller_RI_task_b_acn( const asn1SccSmallParameter * );
extern void controller_RI_task_b_native( const asn1SccSmallParameter * );
extern void controller_RI_task_b_uper( const asn1SccSmallParameter * );


#ifdef __cplusplus
}
#endif
